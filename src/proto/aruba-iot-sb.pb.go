//  (C) Copyright [2018-2022] Hewlett Packard Enterprise Development LP
//  Note: File corresponds to AOS 8.10.x.x release

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: aruba-iot-sb.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This message specifies the receiver of the SouthBound frames.
// The receiver is either a single AP or a broadcast to all APs
// It is present in every SB message
type Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// indicates whether this message is destined for all APs, or just one.
	All *bool `protobuf:"varint,1,opt,name=all" json:"all,omitempty"`
	// In case of a single AP receiver, the apMac specifies the receiving AP (or controller)
	// For broadcast messages ('all' = true), this field can be omitted and on the receive side, should be ignored
	ApMac []byte `protobuf:"bytes,2,opt,name=apMac" json:"apMac,omitempty"`
}

func (x *Receiver) Reset() {
	*x = Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruba_iot_sb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receiver) ProtoMessage() {}

func (x *Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_aruba_iot_sb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receiver.ProtoReflect.Descriptor instead.
func (*Receiver) Descriptor() ([]byte, []int) {
	return file_aruba_iot_sb_proto_rawDescGZIP(), []int{0}
}

func (x *Receiver) GetAll() bool {
	if x != nil && x.All != nil {
		return *x.All
	}
	return false
}

func (x *Receiver) GetApMac() []byte {
	if x != nil {
		return x.ApMac
	}
	return nil
}

// This is the main container for SouthBound messages
type IotSbMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *Meta     `protobuf:"bytes,1,req,name=meta" json:"meta,omitempty"`
	Receiver *Receiver `protobuf:"bytes,2,opt,name=receiver" json:"receiver,omitempty"`
	// defined in "aruba-iot-sb-action.proto"
	// Used with 'Actions' topic. The destination for this topic is always a single AP (no broadcasts)
	Actions []*Action `protobuf:"bytes,3,rep,name=actions" json:"actions,omitempty"`
	// defined in "aruba-iot-sb-config.proto"
	// Used with the 'config' topic. The destination for this topic is usually 'all'
	Config *TransportConfig `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"`
	// defined in "aruba-iot-sb-status.proto"
	// Used with the 'status' topic. Server use this field to response connection problem
	Status *ConnectStatus `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	// Zigbee SB topic
	Zigbee *SbZbMsg `protobuf:"bytes,6,opt,name=zigbee" json:"zigbee,omitempty"`
	// Serial Data SB topic
	SbSData []*SbSerialData `protobuf:"bytes,7,rep,name=sbSData" json:"sbSData,omitempty"`
}

func (x *IotSbMessage) Reset() {
	*x = IotSbMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruba_iot_sb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotSbMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotSbMessage) ProtoMessage() {}

func (x *IotSbMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruba_iot_sb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotSbMessage.ProtoReflect.Descriptor instead.
func (*IotSbMessage) Descriptor() ([]byte, []int) {
	return file_aruba_iot_sb_proto_rawDescGZIP(), []int{1}
}

func (x *IotSbMessage) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *IotSbMessage) GetReceiver() *Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *IotSbMessage) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *IotSbMessage) GetConfig() *TransportConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *IotSbMessage) GetStatus() *ConnectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *IotSbMessage) GetZigbee() *SbZbMsg {
	if x != nil {
		return x.Zigbee
	}
	return nil
}

func (x *IotSbMessage) GetSbSData() []*SbSerialData {
	if x != nil {
		return x.SbSData
	}
	return nil
}

var File_aruba_iot_sb_proto protoreflect.FileDescriptor

var file_aruba_iot_sb_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x73, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x1a, 0x15, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x72,
	0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x73, 0x62, 0x2d, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69,
	0x6f, 0x74, 0x2d, 0x73, 0x62, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x73, 0x62,
	0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61,
	0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x73, 0x62, 0x2d, 0x7a, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d,
	0x73, 0x62, 0x2d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x4d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x61, 0x70, 0x4d, 0x61, 0x63, 0x22, 0x80, 0x03, 0x0a, 0x0c, 0x49, 0x6f, 0x74,
	0x53, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x06, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2e, 0x53, 0x62, 0x5a, 0x62, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x7a, 0x69, 0x67, 0x62,
	0x65, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x62, 0x53, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x62, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x73, 0x62, 0x53, 0x44, 0x61, 0x74, 0x61, 0x42, 0x1b, 0x5a, 0x19, 0x6c,
	0x75, 0x62, 0x64, 0x75, 0x62, 0x2e, 0x6e, 0x6c, 0x2f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69,
	0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_aruba_iot_sb_proto_rawDescOnce sync.Once
	file_aruba_iot_sb_proto_rawDescData = file_aruba_iot_sb_proto_rawDesc
)

func file_aruba_iot_sb_proto_rawDescGZIP() []byte {
	file_aruba_iot_sb_proto_rawDescOnce.Do(func() {
		file_aruba_iot_sb_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruba_iot_sb_proto_rawDescData)
	})
	return file_aruba_iot_sb_proto_rawDescData
}

var file_aruba_iot_sb_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_aruba_iot_sb_proto_goTypes = []any{
	(*Receiver)(nil),        // 0: aruba_telemetry.Receiver
	(*IotSbMessage)(nil),    // 1: aruba_telemetry.IotSbMessage
	(*Meta)(nil),            // 2: aruba_telemetry.Meta
	(*Action)(nil),          // 3: aruba_telemetry.Action
	(*TransportConfig)(nil), // 4: aruba_telemetry.TransportConfig
	(*ConnectStatus)(nil),   // 5: aruba_telemetry.ConnectStatus
	(*SbZbMsg)(nil),         // 6: aruba_telemetry.SbZbMsg
	(*SbSerialData)(nil),    // 7: aruba_telemetry.SbSerialData
}
var file_aruba_iot_sb_proto_depIdxs = []int32{
	2, // 0: aruba_telemetry.IotSbMessage.meta:type_name -> aruba_telemetry.Meta
	0, // 1: aruba_telemetry.IotSbMessage.receiver:type_name -> aruba_telemetry.Receiver
	3, // 2: aruba_telemetry.IotSbMessage.actions:type_name -> aruba_telemetry.Action
	4, // 3: aruba_telemetry.IotSbMessage.config:type_name -> aruba_telemetry.TransportConfig
	5, // 4: aruba_telemetry.IotSbMessage.status:type_name -> aruba_telemetry.ConnectStatus
	6, // 5: aruba_telemetry.IotSbMessage.zigbee:type_name -> aruba_telemetry.SbZbMsg
	7, // 6: aruba_telemetry.IotSbMessage.sbSData:type_name -> aruba_telemetry.SbSerialData
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_aruba_iot_sb_proto_init() }
func file_aruba_iot_sb_proto_init() {
	if File_aruba_iot_sb_proto != nil {
		return
	}
	file_aruba_iot_types_proto_init()
	file_aruba_iot_sb_action_proto_init()
	file_aruba_iot_sb_config_proto_init()
	file_aruba_iot_sb_status_proto_init()
	file_aruba_iot_sb_zb_proto_init()
	file_aruba_iot_sb_serial_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aruba_iot_sb_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruba_iot_sb_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IotSbMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruba_iot_sb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aruba_iot_sb_proto_goTypes,
		DependencyIndexes: file_aruba_iot_sb_proto_depIdxs,
		MessageInfos:      file_aruba_iot_sb_proto_msgTypes,
	}.Build()
	File_aruba_iot_sb_proto = out.File
	file_aruba_iot_sb_proto_rawDesc = nil
	file_aruba_iot_sb_proto_goTypes = nil
	file_aruba_iot_sb_proto_depIdxs = nil
}

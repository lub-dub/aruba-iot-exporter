//  (C) Copyright [2018-2022] Hewlett Packard Enterprise Development LP
//  Note: File corresponds to AOS 8.10.x.x release

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: aruba-iot-nb-action-results.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Values correspond to the different action results/statuses
// as part of the BLE SB API interactions
type ActionStatus int32

const (
	ActionStatus_failureGeneric         ActionStatus = 0
	ActionStatus_success                ActionStatus = 1
	ActionStatus_deviceNotFound         ActionStatus = 2
	ActionStatus_apNotFound             ActionStatus = 3
	ActionStatus_actionTimeout          ActionStatus = 4
	ActionStatus_connectionAborted      ActionStatus = 5
	ActionStatus_authenticationFailed   ActionStatus = 6
	ActionStatus_notConnected           ActionStatus = 7
	ActionStatus_previousActionFailed   ActionStatus = 8
	ActionStatus_alreadyConnected       ActionStatus = 9
	ActionStatus_noMoreConnectionSlots  ActionStatus = 10
	ActionStatus_decodingFailed         ActionStatus = 11
	ActionStatus_characteristicNotFound ActionStatus = 12
	ActionStatus_invalidRequest         ActionStatus = 13
	ActionStatus_gattError              ActionStatus = 14
	ActionStatus_encryptionFailed       ActionStatus = 15
)

// Enum value maps for ActionStatus.
var (
	ActionStatus_name = map[int32]string{
		0:  "failureGeneric",
		1:  "success",
		2:  "deviceNotFound",
		3:  "apNotFound",
		4:  "actionTimeout",
		5:  "connectionAborted",
		6:  "authenticationFailed",
		7:  "notConnected",
		8:  "previousActionFailed",
		9:  "alreadyConnected",
		10: "noMoreConnectionSlots",
		11: "decodingFailed",
		12: "characteristicNotFound",
		13: "invalidRequest",
		14: "gattError",
		15: "encryptionFailed",
	}
	ActionStatus_value = map[string]int32{
		"failureGeneric":         0,
		"success":                1,
		"deviceNotFound":         2,
		"apNotFound":             3,
		"actionTimeout":          4,
		"connectionAborted":      5,
		"authenticationFailed":   6,
		"notConnected":           7,
		"previousActionFailed":   8,
		"alreadyConnected":       9,
		"noMoreConnectionSlots":  10,
		"decodingFailed":         11,
		"characteristicNotFound": 12,
		"invalidRequest":         13,
		"gattError":              14,
		"encryptionFailed":       15,
	}
)

func (x ActionStatus) Enum() *ActionStatus {
	p := new(ActionStatus)
	*p = x
	return p
}

func (x ActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_aruba_iot_nb_action_results_proto_enumTypes[0].Descriptor()
}

func (ActionStatus) Type() protoreflect.EnumType {
	return &file_aruba_iot_nb_action_results_proto_enumTypes[0]
}

func (x ActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ActionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ActionStatus(num)
	return nil
}

// Deprecated: Use ActionStatus.Descriptor instead.
func (ActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_aruba_iot_nb_action_results_proto_rawDescGZIP(), []int{0}
}

type ActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier for the action. This is the same Identifer that was used in the action request.
	// the originator of the action will need the ID to correlate this result with the outstanding request
	ActionId *string `protobuf:"bytes,1,opt,name=actionId" json:"actionId,omitempty"`
	// Type of action that was executed
	Type *ActionType `protobuf:"varint,2,opt,name=type,enum=aruba_telemetry.ActionType" json:"type,omitempty"`
	// Refers to the MAC address of the end device. Typically a 6 byte BLE MAC or 8 byte Zigbee MAC
	DeviceMac []byte `protobuf:"bytes,3,opt,name=deviceMac" json:"deviceMac,omitempty"`
	// Completion Status of the action
	Status *ActionStatus `protobuf:"varint,4,opt,name=status,enum=aruba_telemetry.ActionStatus" json:"status,omitempty"`
	// Optional additional freeform information
	StatusString *string `protobuf:"bytes,5,opt,name=statusString" json:"statusString,omitempty"`
	// Bonding key is present when devices are bonded together
	BondingKey *BleBondingKey `protobuf:"bytes,6,opt,name=bondingKey" json:"bondingKey,omitempty"`
	// APB mac address
	ApbMac []byte `protobuf:"bytes,7,opt,name=apbMac" json:"apbMac,omitempty"`
}

func (x *ActionResult) Reset() {
	*x = ActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruba_iot_nb_action_results_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResult) ProtoMessage() {}

func (x *ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_aruba_iot_nb_action_results_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResult.ProtoReflect.Descriptor instead.
func (*ActionResult) Descriptor() ([]byte, []int) {
	return file_aruba_iot_nb_action_results_proto_rawDescGZIP(), []int{0}
}

func (x *ActionResult) GetActionId() string {
	if x != nil && x.ActionId != nil {
		return *x.ActionId
	}
	return ""
}

func (x *ActionResult) GetType() ActionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ActionType_bleConnect
}

func (x *ActionResult) GetDeviceMac() []byte {
	if x != nil {
		return x.DeviceMac
	}
	return nil
}

func (x *ActionResult) GetStatus() ActionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ActionStatus_failureGeneric
}

func (x *ActionResult) GetStatusString() string {
	if x != nil && x.StatusString != nil {
		return *x.StatusString
	}
	return ""
}

func (x *ActionResult) GetBondingKey() *BleBondingKey {
	if x != nil {
		return x.BondingKey
	}
	return nil
}

func (x *ActionResult) GetApbMac() []byte {
	if x != nil {
		return x.ApbMac
	}
	return nil
}

var File_aruba_iot_nb_action_results_proto protoreflect.FileDescriptor

var file_aruba_iot_nb_action_results_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x6e, 0x62, 0x2d, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x1a, 0x15, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x02, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6c, 0x65, 0x42, 0x6f, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x62, 0x4d, 0x61, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x61, 0x70, 0x62, 0x4d, 0x61, 0x63, 0x2a, 0xdd, 0x02, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x70, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x08,
	0x12, 0x14, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x6e, 0x6f, 0x4d, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x10,
	0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x67, 0x61, 0x74, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x0f, 0x42, 0x1b, 0x5a, 0x19, 0x6c, 0x75,
	0x62, 0x64, 0x75, 0x62, 0x2e, 0x6e, 0x6c, 0x2f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_aruba_iot_nb_action_results_proto_rawDescOnce sync.Once
	file_aruba_iot_nb_action_results_proto_rawDescData = file_aruba_iot_nb_action_results_proto_rawDesc
)

func file_aruba_iot_nb_action_results_proto_rawDescGZIP() []byte {
	file_aruba_iot_nb_action_results_proto_rawDescOnce.Do(func() {
		file_aruba_iot_nb_action_results_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruba_iot_nb_action_results_proto_rawDescData)
	})
	return file_aruba_iot_nb_action_results_proto_rawDescData
}

var file_aruba_iot_nb_action_results_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aruba_iot_nb_action_results_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_aruba_iot_nb_action_results_proto_goTypes = []any{
	(ActionStatus)(0),     // 0: aruba_telemetry.ActionStatus
	(*ActionResult)(nil),  // 1: aruba_telemetry.ActionResult
	(ActionType)(0),       // 2: aruba_telemetry.ActionType
	(*BleBondingKey)(nil), // 3: aruba_telemetry.BleBondingKey
}
var file_aruba_iot_nb_action_results_proto_depIdxs = []int32{
	2, // 0: aruba_telemetry.ActionResult.type:type_name -> aruba_telemetry.ActionType
	0, // 1: aruba_telemetry.ActionResult.status:type_name -> aruba_telemetry.ActionStatus
	3, // 2: aruba_telemetry.ActionResult.bondingKey:type_name -> aruba_telemetry.BleBondingKey
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_aruba_iot_nb_action_results_proto_init() }
func file_aruba_iot_nb_action_results_proto_init() {
	if File_aruba_iot_nb_action_results_proto != nil {
		return
	}
	file_aruba_iot_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aruba_iot_nb_action_results_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruba_iot_nb_action_results_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aruba_iot_nb_action_results_proto_goTypes,
		DependencyIndexes: file_aruba_iot_nb_action_results_proto_depIdxs,
		EnumInfos:         file_aruba_iot_nb_action_results_proto_enumTypes,
		MessageInfos:      file_aruba_iot_nb_action_results_proto_msgTypes,
	}.Build()
	File_aruba_iot_nb_action_results_proto = out.File
	file_aruba_iot_nb_action_results_proto_rawDesc = nil
	file_aruba_iot_nb_action_results_proto_goTypes = nil
	file_aruba_iot_nb_action_results_proto_depIdxs = nil
}

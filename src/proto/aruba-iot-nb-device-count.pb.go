//  (C) Copyright [2018-2022] Hewlett Packard Enterprise Development LP
//  Note: File corresponds to AOS 8.10.x.x release

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: aruba-iot-nb-device-count.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Used for reporting counts of devices corresponding
// to each device class label in IoT transport profiles
type DeviceCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevUnclassified   *int32 `protobuf:"varint,1,opt,name=dev_unclassified,json=devUnclassified" json:"dev_unclassified,omitempty"`
	DevArubaBeacon    *int32 `protobuf:"varint,2,opt,name=dev_arubaBeacon,json=devArubaBeacon" json:"dev_arubaBeacon,omitempty"`
	DevArubaTag       *int32 `protobuf:"varint,3,opt,name=dev_arubaTag,json=devArubaTag" json:"dev_arubaTag,omitempty"`
	DevZfTag          *int32 `protobuf:"varint,4,opt,name=dev_zfTag,json=devZfTag" json:"dev_zfTag,omitempty"`
	DevStanleyTag     *int32 `protobuf:"varint,5,opt,name=dev_stanleyTag,json=devStanleyTag" json:"dev_stanleyTag,omitempty"`
	DevVirginBeacon   *int32 `protobuf:"varint,6,opt,name=dev_virginBeacon,json=devVirginBeacon" json:"dev_virginBeacon,omitempty"`
	DevEnoceanSensor  *int32 `protobuf:"varint,7,opt,name=dev_enoceanSensor,json=devEnoceanSensor" json:"dev_enoceanSensor,omitempty"`
	DevEnoceanSwitch  *int32 `protobuf:"varint,8,opt,name=dev_enoceanSwitch,json=devEnoceanSwitch" json:"dev_enoceanSwitch,omitempty"`
	DevIBeacon        *int32 `protobuf:"varint,9,opt,name=dev_iBeacon,json=devIBeacon" json:"dev_iBeacon,omitempty"`
	DevAllBleData     *int32 `protobuf:"varint,10,opt,name=dev_allBleData,json=devAllBleData" json:"dev_allBleData,omitempty"`
	Dev_RawBleData    *int32 `protobuf:"varint,11,opt,name=dev_RawBleData,json=devRawBleData" json:"dev_RawBleData,omitempty"`
	DevEddystone      *int32 `protobuf:"varint,12,opt,name=dev_eddystone,json=devEddystone" json:"dev_eddystone,omitempty"`
	DevAssaAbloy      *int32 `protobuf:"varint,13,opt,name=dev_assaAbloy,json=devAssaAbloy" json:"dev_assaAbloy,omitempty"`
	DevArubaSensor    *int32 `protobuf:"varint,14,opt,name=dev_arubaSensor,json=devArubaSensor" json:"dev_arubaSensor,omitempty"`
	DevAbbSensor      *int32 `protobuf:"varint,15,opt,name=dev_abbSensor,json=devAbbSensor" json:"dev_abbSensor,omitempty"`
	DevWifiTag        *int32 `protobuf:"varint,16,opt,name=dev_wifiTag,json=devWifiTag" json:"dev_wifiTag,omitempty"`
	DevWifiAssocSta   *int32 `protobuf:"varint,17,opt,name=dev_wifiAssocSta,json=devWifiAssocSta" json:"dev_wifiAssocSta,omitempty"`
	DevWifiUnassocSta *int32 `protobuf:"varint,18,opt,name=dev_wifiUnassocSta,json=devWifiUnassocSta" json:"dev_wifiUnassocSta,omitempty"`
	DevMysphera       *int32 `protobuf:"varint,19,opt,name=dev_mysphera,json=devMysphera" json:"dev_mysphera,omitempty"`
	DevSBeacon        *int32 `protobuf:"varint,20,opt,name=dev_sBeacon,json=devSBeacon" json:"dev_sBeacon,omitempty"`
	DevOnity          *int32 `protobuf:"varint,21,opt,name=dev_onity,json=devOnity" json:"dev_onity,omitempty"`
	DevMinew          *int32 `protobuf:"varint,22,opt,name=dev_minew,json=devMinew" json:"dev_minew,omitempty"`
	DevGoogle         *int32 `protobuf:"varint,23,opt,name=dev_google,json=devGoogle" json:"dev_google,omitempty"`
	DevPolestar       *int32 `protobuf:"varint,24,opt,name=dev_polestar,json=devPolestar" json:"dev_polestar,omitempty"`
	DevBlyott         *int32 `protobuf:"varint,25,opt,name=dev_blyott,json=devBlyott" json:"dev_blyott,omitempty"`
	DevDiract         *int32 `protobuf:"varint,26,opt,name=dev_diract,json=devDiract" json:"dev_diract,omitempty"`
	DevGwahygiene     *int32 `protobuf:"varint,27,opt,name=dev_gwahygiene,json=devGwahygiene" json:"dev_gwahygiene,omitempty"`
}

func (x *DeviceCount) Reset() {
	*x = DeviceCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruba_iot_nb_device_count_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCount) ProtoMessage() {}

func (x *DeviceCount) ProtoReflect() protoreflect.Message {
	mi := &file_aruba_iot_nb_device_count_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCount.ProtoReflect.Descriptor instead.
func (*DeviceCount) Descriptor() ([]byte, []int) {
	return file_aruba_iot_nb_device_count_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceCount) GetDevUnclassified() int32 {
	if x != nil && x.DevUnclassified != nil {
		return *x.DevUnclassified
	}
	return 0
}

func (x *DeviceCount) GetDevArubaBeacon() int32 {
	if x != nil && x.DevArubaBeacon != nil {
		return *x.DevArubaBeacon
	}
	return 0
}

func (x *DeviceCount) GetDevArubaTag() int32 {
	if x != nil && x.DevArubaTag != nil {
		return *x.DevArubaTag
	}
	return 0
}

func (x *DeviceCount) GetDevZfTag() int32 {
	if x != nil && x.DevZfTag != nil {
		return *x.DevZfTag
	}
	return 0
}

func (x *DeviceCount) GetDevStanleyTag() int32 {
	if x != nil && x.DevStanleyTag != nil {
		return *x.DevStanleyTag
	}
	return 0
}

func (x *DeviceCount) GetDevVirginBeacon() int32 {
	if x != nil && x.DevVirginBeacon != nil {
		return *x.DevVirginBeacon
	}
	return 0
}

func (x *DeviceCount) GetDevEnoceanSensor() int32 {
	if x != nil && x.DevEnoceanSensor != nil {
		return *x.DevEnoceanSensor
	}
	return 0
}

func (x *DeviceCount) GetDevEnoceanSwitch() int32 {
	if x != nil && x.DevEnoceanSwitch != nil {
		return *x.DevEnoceanSwitch
	}
	return 0
}

func (x *DeviceCount) GetDevIBeacon() int32 {
	if x != nil && x.DevIBeacon != nil {
		return *x.DevIBeacon
	}
	return 0
}

func (x *DeviceCount) GetDevAllBleData() int32 {
	if x != nil && x.DevAllBleData != nil {
		return *x.DevAllBleData
	}
	return 0
}

func (x *DeviceCount) GetDev_RawBleData() int32 {
	if x != nil && x.Dev_RawBleData != nil {
		return *x.Dev_RawBleData
	}
	return 0
}

func (x *DeviceCount) GetDevEddystone() int32 {
	if x != nil && x.DevEddystone != nil {
		return *x.DevEddystone
	}
	return 0
}

func (x *DeviceCount) GetDevAssaAbloy() int32 {
	if x != nil && x.DevAssaAbloy != nil {
		return *x.DevAssaAbloy
	}
	return 0
}

func (x *DeviceCount) GetDevArubaSensor() int32 {
	if x != nil && x.DevArubaSensor != nil {
		return *x.DevArubaSensor
	}
	return 0
}

func (x *DeviceCount) GetDevAbbSensor() int32 {
	if x != nil && x.DevAbbSensor != nil {
		return *x.DevAbbSensor
	}
	return 0
}

func (x *DeviceCount) GetDevWifiTag() int32 {
	if x != nil && x.DevWifiTag != nil {
		return *x.DevWifiTag
	}
	return 0
}

func (x *DeviceCount) GetDevWifiAssocSta() int32 {
	if x != nil && x.DevWifiAssocSta != nil {
		return *x.DevWifiAssocSta
	}
	return 0
}

func (x *DeviceCount) GetDevWifiUnassocSta() int32 {
	if x != nil && x.DevWifiUnassocSta != nil {
		return *x.DevWifiUnassocSta
	}
	return 0
}

func (x *DeviceCount) GetDevMysphera() int32 {
	if x != nil && x.DevMysphera != nil {
		return *x.DevMysphera
	}
	return 0
}

func (x *DeviceCount) GetDevSBeacon() int32 {
	if x != nil && x.DevSBeacon != nil {
		return *x.DevSBeacon
	}
	return 0
}

func (x *DeviceCount) GetDevOnity() int32 {
	if x != nil && x.DevOnity != nil {
		return *x.DevOnity
	}
	return 0
}

func (x *DeviceCount) GetDevMinew() int32 {
	if x != nil && x.DevMinew != nil {
		return *x.DevMinew
	}
	return 0
}

func (x *DeviceCount) GetDevGoogle() int32 {
	if x != nil && x.DevGoogle != nil {
		return *x.DevGoogle
	}
	return 0
}

func (x *DeviceCount) GetDevPolestar() int32 {
	if x != nil && x.DevPolestar != nil {
		return *x.DevPolestar
	}
	return 0
}

func (x *DeviceCount) GetDevBlyott() int32 {
	if x != nil && x.DevBlyott != nil {
		return *x.DevBlyott
	}
	return 0
}

func (x *DeviceCount) GetDevDiract() int32 {
	if x != nil && x.DevDiract != nil {
		return *x.DevDiract
	}
	return 0
}

func (x *DeviceCount) GetDevGwahygiene() int32 {
	if x != nil && x.DevGwahygiene != nil {
		return *x.DevGwahygiene
	}
	return 0
}

var File_aruba_iot_nb_device_count_proto protoreflect.FileDescriptor

var file_aruba_iot_nb_device_count_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x6e, 0x62, 0x2d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x1a, 0x15, 0x61, 0x72, 0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x07, 0x0a, 0x0b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x76,
	0x5f, 0x75, 0x6e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x72, 0x75, 0x62,
	0x61, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64,
	0x65, 0x76, 0x41, 0x72, 0x75, 0x62, 0x61, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x41, 0x72, 0x75, 0x62, 0x61, 0x54, 0x61, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x5f, 0x7a, 0x66, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x76, 0x5a, 0x66, 0x54, 0x61, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x6c, 0x65, 0x79, 0x54, 0x61, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x6e, 0x6c, 0x65,
	0x79, 0x54, 0x61, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x5f, 0x76, 0x69, 0x72, 0x67,
	0x69, 0x6e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x64, 0x65, 0x76, 0x56, 0x69, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x6e, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x65, 0x76, 0x45,
	0x6e, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x65, 0x76, 0x5f, 0x65, 0x6e, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x65, 0x76, 0x45, 0x6e, 0x6f, 0x63,
	0x65, 0x61, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x5f, 0x69, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x49, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x76, 0x5f, 0x61, 0x6c, 0x6c, 0x42, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x41, 0x6c, 0x6c, 0x42, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x5f, 0x52, 0x61, 0x77, 0x42, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x52, 0x61,
	0x77, 0x42, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x5f,
	0x65, 0x64, 0x64, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x65, 0x76, 0x45, 0x64, 0x64, 0x79, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x73, 0x73, 0x61, 0x41, 0x62, 0x6c, 0x6f, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x41, 0x73, 0x73, 0x61, 0x41, 0x62, 0x6c,
	0x6f, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x72, 0x75, 0x62, 0x61, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x76,
	0x41, 0x72, 0x75, 0x62, 0x61, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x76, 0x5f, 0x61, 0x62, 0x62, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x41, 0x62, 0x62, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x54, 0x61, 0x67, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x57, 0x69, 0x66, 0x69, 0x54, 0x61,
	0x67, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x53, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x76,
	0x57, 0x69, 0x66, 0x69, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12,
	0x64, 0x65, 0x76, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x53,
	0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x76, 0x57, 0x69, 0x66,
	0x69, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x76, 0x5f, 0x6d, 0x79, 0x73, 0x70, 0x68, 0x65, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x4d, 0x79, 0x73, 0x70, 0x68, 0x65, 0x72, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x53, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x5f, 0x6f, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x76, 0x4f, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x77, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x4d, 0x69, 0x6e, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x65, 0x76, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x5f,
	0x70, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x5f, 0x62, 0x6c, 0x79, 0x6f, 0x74, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x64, 0x65, 0x76, 0x42, 0x6c, 0x79, 0x6f, 0x74, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x5f, 0x64, 0x69, 0x72, 0x61, 0x63, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x44, 0x69, 0x72, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x76,
	0x5f, 0x67, 0x77, 0x61, 0x68, 0x79, 0x67, 0x69, 0x65, 0x6e, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x47, 0x77, 0x61, 0x68, 0x79, 0x67, 0x69, 0x65, 0x6e, 0x65,
	0x42, 0x1b, 0x5a, 0x19, 0x6c, 0x75, 0x62, 0x64, 0x75, 0x62, 0x2e, 0x6e, 0x6c, 0x2f, 0x61, 0x72,
	0x75, 0x62, 0x61, 0x2d, 0x69, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_aruba_iot_nb_device_count_proto_rawDescOnce sync.Once
	file_aruba_iot_nb_device_count_proto_rawDescData = file_aruba_iot_nb_device_count_proto_rawDesc
)

func file_aruba_iot_nb_device_count_proto_rawDescGZIP() []byte {
	file_aruba_iot_nb_device_count_proto_rawDescOnce.Do(func() {
		file_aruba_iot_nb_device_count_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruba_iot_nb_device_count_proto_rawDescData)
	})
	return file_aruba_iot_nb_device_count_proto_rawDescData
}

var file_aruba_iot_nb_device_count_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_aruba_iot_nb_device_count_proto_goTypes = []any{
	(*DeviceCount)(nil), // 0: aruba_telemetry.DeviceCount
}
var file_aruba_iot_nb_device_count_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_aruba_iot_nb_device_count_proto_init() }
func file_aruba_iot_nb_device_count_proto_init() {
	if File_aruba_iot_nb_device_count_proto != nil {
		return
	}
	file_aruba_iot_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aruba_iot_nb_device_count_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruba_iot_nb_device_count_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aruba_iot_nb_device_count_proto_goTypes,
		DependencyIndexes: file_aruba_iot_nb_device_count_proto_depIdxs,
		MessageInfos:      file_aruba_iot_nb_device_count_proto_msgTypes,
	}.Build()
	File_aruba_iot_nb_device_count_proto = out.File
	file_aruba_iot_nb_device_count_proto_rawDesc = nil
	file_aruba_iot_nb_device_count_proto_goTypes = nil
	file_aruba_iot_nb_device_count_proto_depIdxs = nil
}
